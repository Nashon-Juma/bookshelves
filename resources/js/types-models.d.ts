/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by laravel-typescriptable
declare namespace App.Models {
  export interface Book {
    id: number
    title: string
    uuid: string
    slug_sort?: string
    slug: string
    contributor?: string
    description?: string
    released_on: Date
    rights?: string
    serie_id?: number
    author_main_id?: number
    volume: number
    publisher_id?: number
    language_slug?: string
    page_count: number
    is_maturity_rating: number
    is_hidden: boolean
    type: 'audio' | 'comic' | 'novel' | 'unknown'
    isbn10?: string
    isbn13?: string
    identifiers: any[]
    google_book_id?: string
    physical_path?: string
    created_at?: Date
    updated_at?: Date
    direct_download_url?: string
    isbn?: string
    meta_author?: string
    authors_names?: string
    files?: any
    file_main?: any
    files_list?: any
    cover_filament?: string
    cover_thumbnail?: string
    cover_og?: string
    cover_simple?: string
    cover_original?: string
    cover_color?: string
    cover_media?: any[]
    cover?: any[]
    cover_full?: any[]
    is_favorite?: boolean
    meta_class_namespaced?: string
    meta_class_name?: string
    meta_class_name_plural?: string
    meta_class_snake?: string
    meta_class_snake_plural?: string
    meta_class_slug?: string
    meta_class_slug_plural?: string
    meta_first_char?: string
    meta_class?: string
    tags_string?: string
    entity?: string
    opds_link?: string
    meta?: any[]
    publisher?: App.Models.Publisher
    serie?: App.Models.Serie
    authors?: App.Models.Author[]
    author_main?: App.Models.Author
    media?: any[]
    favorites?: App.Models.User[]
    language?: App.Models.Language
    reviews?: App.Models.Review[]
    selections?: App.Models.User[]
    tags?: any[]
    tags_translated?: any[]
    authors_count?: number
    media_count?: number
    favorites_count?: number
    reviews_count?: number
    selections_count?: number
    tags_count?: number
    tags_translated_count?: number
  }
  export interface Selectionable {
    id: number
    user_id: number
    selectionable_id: number
    selectionable_type: string
    created_at?: Date
    updated_at?: Date
    selectionable?: any
  }
  export interface Post {
    id: number
    title: string
    slug: string
    summary?: string
    content: any[]
    is_pinned: boolean
    category: 'calibre' | 'ereader'
    picture?: string
    published_at: Date
    status: 'draft' | 'scheduled' | 'published'
    meta_title?: string
    meta_description?: string
    author_id?: number
    created_at?: Date
    updated_at?: Date
    builder_data?: any[]
    seo?: string[]
    show_route?: string
    meta?: any[]
    mediables_list?: string[]
    mediable?: { picture?: string, }
    author?: App.Models.User
  }
  export interface Serie {
    id: number
    title: string
    slug_sort?: string
    slug: string
    language_slug?: string
    type: 'audio' | 'comic' | 'novel' | 'unknown'
    description?: string
    link?: string
    author_main_id?: number
    created_at?: Date
    updated_at?: Date
    books_link?: string
    meta_author?: string
    authors_names?: string
    file_main?: any
    files_list?: any[]
    cover_filament?: string
    cover_thumbnail?: string
    cover_og?: string
    cover_simple?: string
    cover_original?: string
    cover_color?: string
    cover_media?: any[]
    cover?: any[]
    cover_full?: any[]
    is_favorite?: boolean
    meta_class_namespaced?: string
    meta_class_name?: string
    meta_class_name_plural?: string
    meta_class_snake?: string
    meta_class_snake_plural?: string
    meta_class_slug?: string
    meta_class_slug_plural?: string
    meta_first_char?: string
    meta_class?: string
    tags_string?: string
    entity?: string
    opds_link?: string
    meta?: any[]
    books?: any[]
    authors?: App.Models.Author[]
    author_main?: App.Models.Author
    media?: any[]
    favorites?: App.Models.User[]
    language?: App.Models.Language
    reviews?: App.Models.Review[]
    selections?: App.Models.User[]
    tags?: any[]
    tags_translated?: any[]
    books_count?: number
    authors_count?: number
    media_count?: number
    favorites_count?: number
    reviews_count?: number
    selections_count?: number
    tags_count?: number
    tags_translated_count?: number
  }
  export interface Review {
    id: number
    text?: string
    rating?: number
    user_id?: number
    reviewable_id?: number
    reviewable_type?: string
    created_at?: Date
    updated_at?: Date
    reviewable?: any
    user?: App.Models.User
    books?: App.Models.Book[]
    series?: App.Models.Serie[]
    authors?: App.Models.Author[]
    books_count?: number
    series_count?: number
    authors_count?: number
  }
  export interface User {
    id: number
    name: string
    email: string
    email_verified_at: Date
    two_factor_confirmed_at?: Date
    current_team_id?: number
    profile_photo_path?: string
    username: string
    is_blocked: boolean
    about?: string
    gender: 'other' | 'female' | 'male' | 'nonbinary' | 'notsay'
    role: 'super_admin' | 'admin' | 'editor' | 'user'
    pronouns?: string
    use_gravatar: number
    display_favorites: boolean
    display_reviews: boolean
    display_gender: boolean
    avatar?: string
    created_at?: Date
    updated_at?: Date
    is_editor?: boolean
    is_admin?: boolean
    is_super_admin?: boolean
    avatar_thumbnail?: string
    color?: string
    banner?: string
    profile_photo_url?: any
    media?: any[]
    media_count?: number
  }
  export interface Submission {
    id: number
    name?: string
    email?: string
    reason: 'idea' | 'issue' | 'book_problem' | 'book_adding' | 'other'
    message?: string
    created_at?: Date
    updated_at?: Date
    mediables_list?: string[]
    mediable?: { picture?: string, }
  }
  export interface Publisher {
    id: number
    slug?: string
    name?: string
    created_at?: Date
    updated_at?: Date
    show_route?: string
    meta?: any[]
    books?: any[]
    books_count?: number
  }
  export interface Language {
    slug: string
    name: any[]
    created_at?: Date
    updated_at?: Date
    translations?: any
    books?: App.Models.Book[]
    series?: App.Models.Serie[]
    books_count?: number
    series_count?: number
  }
  export interface Favoritable {
    user_id: number
    favoritable_id: number
    favoritable_type: string
    created_at?: Date
    updated_at?: Date
    id: number
  }
  export interface Page {
    id: number
    title: string
    slug: string
    language: 'en' | 'fr'
    template: 'home' | 'about'
    content: any[]
    meta_title?: string
    meta_description?: string
    created_at?: Date
    updated_at?: Date
    seo?: string[]
    show_route?: string
    meta?: any[]
    template_data?: any[]
    media?: any[]
    media_count?: number
  }
  export interface MediaExtended {
    id: number
    model_type: string
    model_id: number
    uuid?: string
    collection_name: string
    name?: any
    file_name: string
    mime_type?: string
    disk: string
    conversions_disk?: string
    size: number
    manipulations: any[]
    custom_properties: any[]
    generated_conversions: any[]
    responsive_images: any[]
    order_column?: number
    created_at?: Date
    updated_at?: Date
    size_human?: string
    full_extension?: string
    download?: string
    type?: any
    extension?: any
    human_readable_size?: any
    preview_url?: any
    original_url?: any
    model?: any
    temporary_upload?: App.Models.TemporaryUpload
  }
  export interface Author {
    id: number
    slug: string
    lastname?: string
    firstname?: string
    name: string
    role: 'aut'
    description?: string
    link?: string
    note?: any
    created_at?: Date
    updated_at?: Date
    books_link?: string
    series_link?: string
    title?: any
    file_main?: any
    files_list?: any[]
    cover_filament?: string
    cover_thumbnail?: string
    cover_og?: string
    cover_simple?: string
    cover_original?: string
    cover_color?: string
    cover_media?: any[]
    cover?: any[]
    cover_full?: any[]
    is_favorite?: boolean
    meta_class_namespaced?: string
    meta_class_name?: string
    meta_class_name_plural?: string
    meta_class_snake?: string
    meta_class_snake_plural?: string
    meta_class_slug?: string
    meta_class_slug_plural?: string
    meta_first_char?: string
    meta_class?: string
    tags_string?: string
    entity?: string
    opds_link?: string
    meta?: any[]
    books?: any[]
    series?: any[]
    media?: any[]
    favorites?: App.Models.User[]
    reviews?: App.Models.Review[]
    tags?: any[]
    tags_translated?: any[]
    books_count?: number
    series_count?: number
    media_count?: number
    favorites_count?: number
    reviews_count?: number
    tags_count?: number
    tags_translated_count?: number
  }
  export interface TagExtend {
    id: number
    name: any[]
    slug: any[]
    type: 'tag' | 'genre'
    order_column?: number
    created_at?: Date
    updated_at?: Date
    show_link?: string
    books_link?: string
    translations?: any
    show_route?: string
    meta?: any[]
    books?: any[]
    series?: any[]
    tags?: any[]
    tags_translated?: any[]
    books_count?: number
    series_count?: number
    tags_count?: number
    tags_translated_count?: number
  }
}

declare namespace App {
  export interface PaginateLink {
    url: string
    label: string
    active: boolean
  }
  export interface Paginate<T = any> {
    data: T[]
    current_page: number
    first_page_url: string
    from: number
    last_page: number
    last_page_url: string
    links: App.PaginateLink[]
    next_page_url: string
    path: string
    per_page: number
    prev_page_url: string
    to: number
    total: number
  }
  export interface ApiPaginate<T = any> {
    data: T[]
    links: {
      first?: string
      last?: string
      prev?: string
      next?: string
    }
    meta: {
      current_page: number
      from: number
      last_page: number
      links: App.PaginateLink[]
      path: string
      per_page: number
      to: number
      total: number
    }
  }
}
