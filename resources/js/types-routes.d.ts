/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by laravel-typescriptable
declare namespace App.Route {
  export type Name = '/' | 'api-tokens.destroy' | 'api-tokens.index' | 'api-tokens.store' | 'api-tokens.update' | 'api.app.count' | 'api.app.index' | 'api.app.stats' | 'api.authors.index' | 'api.authors.show' | 'api.authors.show.books' | 'api.authors.show.series' | 'api.books.index' | 'api.books.show' | 'api.download.author' | 'api.download.book' | 'api.download.direct' | 'api.download.serie' | 'api.entity.latest' | 'api.entity.related' | 'api.entity.search' | 'api.entity.selection' | 'api.enums' | 'api.index' | 'api.pages.index' | 'api.pages.show' | 'api.posts.index' | 'api.posts.show' | 'api.publishers.books' | 'api.publishers.index' | 'api.publishers.show' | 'api.search.index' | 'api.series.index' | 'api.series.next' | 'api.series.show' | 'api.series.show.books' | 'api.tags.index' | 'api.tags.show' | 'api.tags.show.books' | 'api/user' | 'builder' | 'catalog' | 'catalog.authors' | 'catalog.authors.character' | 'catalog.authors.show' | 'catalog.books.show' | 'catalog.index' | 'catalog.search' | 'catalog.series' | 'catalog.series.character' | 'catalog.series.show' | 'current-user-photo.destroy' | 'current-user.destroy' | 'dashboard' | 'front.books.index' | 'login' | 'logout' | 'opds' | 'opds.authors.character' | 'opds.authors.index' | 'opds.authors.show' | 'opds.books.show' | 'opds.index' | 'opds.latest' | 'opds.random' | 'opds.search' | 'opds.series.character' | 'opds.series.index' | 'opds.series.show' | 'other-browser-sessions.destroy' | 'password.confirm' | 'password.confirmation' | 'password.email' | 'password.request' | 'password.reset' | 'password.update' | 'policy.show' | 'profile.show' | 'register' | 'sanctum.csrf-cookie' | 'terms.show' | 'two-factor-challenge' | 'two-factor.confirm' | 'two-factor.disable' | 'two-factor.enable' | 'two-factor.login' | 'two-factor.qr-code' | 'two-factor.recovery-codes' | 'two-factor.secret-key' | 'user-password.update' | 'user-profile-information.update' | 'user/confirm-password' | 'user/two-factor-recovery-codes' | 'verification.notice' | 'verification.send' | 'verification.verify' | 'webreader' | 'webreader.reader';
  export type Path = '/' | '/api' | '/api/app' | '/api/app/count' | '/api/app/stats' | '/api/authors' | '/api/authors/{author_slug}' | '/api/authors/{author_slug}/books' | '/api/authors/{author_slug}/series' | '/api/books' | '/api/books/{author_slug}/{book_slug}' | '/api/cms/pages' | '/api/cms/pages/{cms_page_slug}' | '/api/download/author/{author_slug}/{format?}' | '/api/download/book/direct/{author_slug}/{book_slug}' | '/api/download/book/{author_slug}/{book_slug}' | '/api/download/serie/{author_slug}/{serie_slug}/{format?}' | '/api/entities/latest' | '/api/entities/related/{author_slug}/{book_slug}' | '/api/entities/search' | '/api/entities/selection' | '/api/enums' | '/api/posts' | '/api/posts/{post_slug}' | '/api/publishers' | '/api/publishers/{publisher_slug}' | '/api/publishers/{publisher_slug}/books' | '/api/search' | '/api/series' | '/api/series/{author_slug}/{serie_slug}' | '/api/series/{author_slug}/{serie_slug}/books' | '/api/series/{author_slug}/{serie_slug}/{volume}/next' | '/api/tags' | '/api/tags/{tag_slug}' | '/api/tags/{tag_slug}/books' | '/api/user' | '/books' | '/catalog' | '/catalog/authors' | '/catalog/authors/{character}' | '/catalog/authors/{character}/{author}' | '/catalog/books/{author}/{book}' | '/catalog/search' | '/catalog/series' | '/catalog/series/{author}/{serie}' | '/catalog/series/{character}' | '/dashboard' | '/email/verification-notification' | '/email/verify' | '/email/verify/{id}/{hash}' | '/features/builder' | '/features/catalog' | '/features/opds' | '/features/webreader' | '/forgot-password' | '/login' | '/logout' | '/opds' | '/opds/authors' | '/opds/authors/{character}' | '/opds/authors/{character}/{author}' | '/opds/books/{author}/{book}' | '/opds/latest' | '/opds/random' | '/opds/search' | '/opds/series' | '/opds/series/{character}' | '/opds/series/{character}/{serie}' | '/privacy-policy' | '/register' | '/reset-password' | '/reset-password/{token}' | '/sanctum/csrf-cookie' | '/terms-of-service' | '/two-factor-challenge' | '/user' | '/user/api-tokens' | '/user/api-tokens/{token}' | '/user/confirm-password' | '/user/confirmed-password-status' | '/user/confirmed-two-factor-authentication' | '/user/other-browser-sessions' | '/user/password' | '/user/profile' | '/user/profile-information' | '/user/profile-photo' | '/user/two-factor-authentication' | '/user/two-factor-qr-code' | '/user/two-factor-recovery-codes' | '/user/two-factor-secret-key' | '/webreader/{author}/{book}';
  export interface Params {
    'login': never
    'login': never
    'logout': never
    'password.request': never
    'password.reset': {
      'token': App.Route.ParamType
    }
    'password.email': never
    'password.update': never
    'register': never
    'register': never
    'verification.notice': never
    'verification.verify': {
      'id': App.Route.ParamType
'hash': App.Route.ParamType
    }
    'verification.send': never
    'user-profile-information.update': never
    'user-password.update': never
    'user/confirm-password': never
    'password.confirmation': never
    'password.confirm': never
    'two-factor.login': never
    'two-factor-challenge': never
    'two-factor.enable': never
    'two-factor.confirm': never
    'two-factor.disable': never
    'two-factor.qr-code': never
    'two-factor.secret-key': never
    'two-factor.recovery-codes': never
    'user/two-factor-recovery-codes': never
    'terms.show': never
    'policy.show': never
    'profile.show': never
    'other-browser-sessions.destroy': never
    'current-user-photo.destroy': never
    'current-user.destroy': never
    'api-tokens.index': never
    'api-tokens.store': never
    'api-tokens.update': {
      'token': App.Route.ParamType
    }
    'api-tokens.destroy': {
      'token': App.Route.ParamType
    }
    'sanctum.csrf-cookie': never
    'api.app.index': never
    'api.app.stats': never
    'api.app.count': never
    'api.authors.index': never
    'api.authors.show': {
      'author_slug': App.Route.ParamType
    }
    'api.authors.show.books': {
      'author_slug': App.Route.ParamType
    }
    'api.authors.show.series': {
      'author_slug': App.Route.ParamType
    }
    'api.books.index': never
    'api.books.show': {
      'author_slug': App.Route.ParamType
'book_slug': App.Route.ParamType
    }
    'api.pages.index': never
    'api.pages.show': {
      'cms_page_slug': App.Route.ParamType
    }
    'api.download.book': {
      'author_slug': App.Route.ParamType
'book_slug': App.Route.ParamType
    }
    'api.download.direct': {
      'author_slug': App.Route.ParamType
'book_slug': App.Route.ParamType
    }
    'api.download.author': {
      'author_slug': App.Route.ParamType
'format': App.Route.ParamType
    }
    'api.download.serie': {
      'author_slug': App.Route.ParamType
'serie_slug': App.Route.ParamType
'format': App.Route.ParamType
    }
    'api.entity.latest': never
    'api.entity.selection': never
    'api.entity.related': {
      'author_slug': App.Route.ParamType
'book_slug': App.Route.ParamType
    }
    'api.entity.search': never
    'api.index': never
    'api.enums': never
    'api.posts.index': never
    'api.posts.show': {
      'post_slug': App.Route.ParamType
    }
    'api.publishers.index': never
    'api.publishers.show': {
      'publisher_slug': App.Route.ParamType
    }
    'api.publishers.books': {
      'publisher_slug': App.Route.ParamType
    }
    'api.search.index': never
    'api.series.index': never
    'api.series.show': {
      'author_slug': App.Route.ParamType
'serie_slug': App.Route.ParamType
    }
    'api.series.next': {
      'author_slug': App.Route.ParamType
'serie_slug': App.Route.ParamType
'volume': App.Route.ParamType
    }
    'api.series.show.books': {
      'author_slug': App.Route.ParamType
'serie_slug': App.Route.ParamType
    }
    'api.tags.index': never
    'api.tags.show': {
      'tag_slug': App.Route.ParamType
    }
    'api.tags.show.books': {
      'tag_slug': App.Route.ParamType
    }
    'front.books.index': never
    '/': never
    'catalog': never
    'opds': never
    'webreader': never
    'builder': never
    'catalog.authors': never
    'catalog.authors.character': {
      'character': App.Route.ParamType
    }
    'catalog.authors.show': {
      'character': App.Route.ParamType
'author': App.Route.ParamType
    }
    'catalog.books.show': {
      'author': App.Route.ParamType
'book': App.Route.ParamType
    }
    'catalog.index': never
    'catalog.search': never
    'catalog.series': never
    'catalog.series.character': {
      'character': App.Route.ParamType
    }
    'catalog.series.show': {
      'author': App.Route.ParamType
'serie': App.Route.ParamType
    }
    'opds.authors.index': never
    'opds.authors.character': {
      'character': App.Route.ParamType
    }
    'opds.authors.show': {
      'character': App.Route.ParamType
'author': App.Route.ParamType
    }
    'opds.books.show': {
      'author': App.Route.ParamType
'book': App.Route.ParamType
    }
    'opds.index': never
    'opds.latest': never
    'opds.random': never
    'opds.search': never
    'opds.series.index': never
    'opds.series.character': {
      'character': App.Route.ParamType
    }
    'opds.series.show': {
      'character': App.Route.ParamType
'serie': App.Route.ParamType
    }
    'webreader.reader': {
      'author': App.Route.ParamType
'book': App.Route.ParamType
    }
    'api/user': never
    'dashboard': never
  };

  export type Method = 'HEAD' | 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'
  export type ParamType = string | number | boolean | undefined
  export interface Link { name: App.Route.Name; path: App.Route.Path; params?: App.Route.Params[App.Route.Name], methods: App.Route.Method[] }
  export interface RouteConfig<T extends App.Route.Name> {
    name: T
    params?: T extends keyof App.Route.Params ? App.Route.Params[T] : never
  }
}
